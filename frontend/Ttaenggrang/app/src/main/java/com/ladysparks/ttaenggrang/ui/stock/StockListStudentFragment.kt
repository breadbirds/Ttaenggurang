package com.ladysparks.ttaenggrang.ui.stock

import android.os.Bundle
import android.util.Log
import android.view.View
import android.widget.Toast
import androidx.fragment.app.viewModels
import com.ladysparks.ttaenggrang.R
import com.ladysparks.ttaenggrang.base.BaseFragment
import com.ladysparks.ttaenggrang.base.BaseTableAdapter
import com.ladysparks.ttaenggrang.data.model.dto.StockDto
import com.ladysparks.ttaenggrang.databinding.FragmentStockListStudentBinding
import com.ladysparks.ttaenggrang.ui.component.BaseTableRowModel
import com.ladysparks.ttaenggrang.util.SharedPreferencesUtil

class StockListStudentFragment : BaseFragment<FragmentStockListStudentBinding>(
    FragmentStockListStudentBinding::bind,
    R.layout.fragment_stock_list_student
), OnStockClickListener {

    private val viewModel: StockViewModel by viewModels()
    private var studentId: Int = -1
    private lateinit var tableAdapter: BaseTableAdapter


    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        //Ï¥àÍ∏∞Ìôî
        initAdapter()

        // LiveData Í¥ÄÏ∞∞ÌïòÏó¨ Îç∞Ïù¥ÌÑ∞ Î≥ÄÍ≤Ω Ïãú UI ÏóÖÎç∞Ïù¥Ìä∏
        observeViewModel()

        // ÏÑúÎ≤ÑÏóêÏÑú Ï£ºÏãù Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
        viewModel.fetchAllStocks()

        // ÏÑúÎ≤ÑÏóêÏÑú Í±∞Îûò Í∞ÄÎä• ÌòÑÍ∏à Í∞ÄÏ†∏Ïò§Í∏∞
        viewModel.fetchBalance()

        // studentId Í∞ÄÏ†∏Ïò§Í∏∞
        studentId = SharedPreferencesUtil.getUserId()

        // ÏÑúÎ≤ÑÏóêÏÑú ÌïôÏÉù Ï£ºÏãù Î≥¥Ïú† ÎÇ¥Ïó≠ Í∞ÄÏ†∏Ïò§Í∏∞
        viewModel.fetchOwnedStocks(studentId)
        viewModel.fetchStudentStockTransactions(studentId)

    }

    override fun onStockClick(stock: StockDto) {

    }

    private fun initAdapter() {
        tableAdapter = BaseTableAdapter(
            header = listOf(
                "Îß§ÏàòÏùº",
                "Ï£ºÏãùÎ™Ö",
                "Ïú†Ìòï",
                "Î≥¥Ïú† Ï£ºÏãù Ïàò",
                "ÌèâÍ∑† Îß§ÏûÖ Îã®Í∞Ä",
                "ÌòÑÏû¨Ï£ºÍ∞Ä",
                "ÌèâÍ∞ÄÍ∏àÏï°",
                "ÏàòÏùµÎ•†",
                "ÏÜêÏùµÍ∏àÏï°"
            ), // ‚úÖ Ìó§Îçî Ïª¨Îüº ÏÑ§Ï†ï
            data = emptyList(), // ‚úÖ Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ ÏóÜÏùå
            onRowClickListener = { rowIndex, rowData ->
                Toast.makeText(
                    requireContext(),
                    "ÌÅ¥Î¶≠Ìïú Ìñâ: ${rowData.joinToString()}",
                    Toast.LENGTH_SHORT
                ).show()
            }
        )
        binding.recyclerStudentStockList.adapter = tableAdapter
    }

    private fun observeViewModel() {
        viewModel.ownedStocks.observe(viewLifecycleOwner) { ownedStocks ->
            Log.d("StockFragment", "üìå ownedStocks ÏóÖÎç∞Ïù¥Ìä∏Îê®: $ownedStocks")
            if (ownedStocks.isNotEmpty() && viewModel.stockTransaction.value != null) {
                viewModel.updateStockTableData(studentId)
            }
        }

        viewModel.stockTransaction.observe(viewLifecycleOwner) { transactions ->
            Log.d("StockFragment", "üìå stockTransaction ÏóÖÎç∞Ïù¥Ìä∏Îê®: $transactions")
            if (transactions.isNotEmpty() && viewModel.ownedStocks.value != null) {
                viewModel.updateStockTableData(studentId)
            }
        }

        viewModel.stockTableData.observe(viewLifecycleOwner) { newData ->
            Log.d("StockFragment", "üìå stockTableData ÏóÖÎç∞Ïù¥Ìä∏Îê®: $newData")
            tableAdapter.updateData(newData)
        }

        viewModel.balance.observe(viewLifecycleOwner) { balance ->
            binding.textContent5.text = "$balance"
        }

        viewModel.stockSummary.observe(viewLifecycleOwner) { summary ->
            binding.textContent1.text = "${summary["totalInvestment"]} Ïõê"
            binding.textContent2.text = "${summary["totalValuation"]} Ïõê"
            binding.textContent3.text = "${summary["totalProfit"]} Ïõê"
            binding.textContent4.text = "%.2f%%".format(summary["totalReturnRate"])
        }

    }
}
